/*
 * template: demo/library/PROJECT_SOURCE_DIR/PROJECT_NAME.h
 * vendor/extension: mulle-sde/c-demo
 */
#ifndef mulle_fprintf_h__
#define mulle_fprintf_h__

#include "include.h"

#include <stdint.h>

/*
 *  (c) 2021 Nat! Mulle kybernetiK 
 *
 *  version:  major, minor, patch
 */
#define MULLE_FPRINTF_VERSION  ((0 << 20) | (0 << 8) | 1)


static inline unsigned int   mulle_fprintf_get_version_major( void)
{
   return( MULLE_FPRINTF_VERSION >> 20);
}


static inline unsigned int   mulle_fprintf_get_version_minor( void)
{
   return( (MULLE_FPRINTF_VERSION >> 8) & 0xFFF);
}


static inline unsigned int   mulle_fprintf_get_version_patch( void)
{
   return( MULLE_FPRINTF_VERSION & 0xFF);
}

MULLE_FPRINTF_EXTERN_GLOBAL
uint32_t   mulle_fprintf_get_version( void);


#include <stdio.h>
#include <stdarg.h>

MULLE_FPRINTF_EXTERN_GLOBAL
int   mulle_printf( char *format, ...);

MULLE_FPRINTF_EXTERN_GLOBAL
int   mulle_vprintf( char *format, va_list args);

MULLE_FPRINTF_EXTERN_GLOBAL
int   mulle_fprintf( FILE *fp, char *format, ...);

MULLE_FPRINTF_EXTERN_GLOBAL
int   mulle_vfprintf( FILE *fp, char *format, va_list args);


/*
 * The following files are auto-generated.
 * The _mulle-fprintf-provide header is generated by
 * mulle-match-to-c during a reflect.
 */
#include "_mulle-fprintf-provide.h"

/*
 * The versioncheck header can be generated with
 * mulle-project-dependency-versions, but it is optional.
 */
#ifdef __has_include
# if __has_include( "_mulle-fprintf-versioncheck.h")
#  include "_mulle-fprintf-versioncheck.h"
# endif
#endif

#endif
